package linguist

// *** DO NOT MODIFY THIS FILE DIRECTLY *** \\
// this file was automatically generated
// by generate_classifier.go at
// 2015-12-08 05:03:25.638446638 -0500 EST

var class_map map[int]string = map[int]string{79: "PostScript", 80: "Apex", 121: "Pan", 144: "Zimpl", 151: "wisp", 192: "Crystal", 197: "Slim", 69: "SystemVerilog", 22: "Rust", 48: "SuperCollider", 181: "GAMS", 9: "Stylus", 191: "CSS", 77: "MediaWiki", 81: "Brightscript", 96: "Pod", 106: "Parrot Internal Representation", 150: "RobotFramework", 19: "Agda", 20: "Objective-C++", 24: "Gnuplot", 119: "HTML", 134: "JSONiq", 135: "OpenCL", 160: "ApacheConf", 170: "Diff", 8: "ShellSession", 66: "Markdown", 177: "PAWN", 186: "COBOL", 33: "Scilab", 29: "Eagle", 30: "Org", 65: "Kotlin", 161: "C#", 14: "Isabelle", 51: "Grace", 115: "ECL", 116: "Forth", 126: "Handlebars", 172: "GAP", 28: "SourcePawn", 37: "Idris", 64: "Component Pascal", 130: "C++", 12: "Clojure", 44: "Nix", 97: "Visual Basic", 99: "Logos", 107: "QMake", 117: "Gosu", 118: "Shell", 137: "Zephir", 39: "RDoc", 168: "NSIS", 152: "CoffeeScript", 18: "Rebol", 34: "Tea", 63: "TypeScript", 6: "Emacs Lisp", 140: "Cuda", 164: "Moocode", 93: "Java", 142: "SCSS", 147: "NetLogo", 148: "Pascal", 4: "RMarkdown", 55: "Literate CoffeeScript", 154: "Jade", 194: "Pike", 2: "M", 26: "Elm", 27: "Perl", 47: "SAS", 72: "XC", 104: "Nit", 108: "Red", 193: "Monkey", 11: "ATS", 176: "Nemerle", 178: "Perl6", 184: "UnrealScript", 21: "Prolog", 82: "GLSL", 98: "C", 169: "Creole", 10: "Omgrofl", 36: "INI", 42: "BlitzBasic", 45: "Ox", 70: "Nginx", 88: "Oxygene", 127: "Lasso", 128: "OpenEdge ABL", 13: "Game Maker Language", 196: "Shen", 74: "AspectJ", 89: "Volt", 100: "PogoScript", 101: "Squirrel", 102: "Assembly", 32: "STON", 49: "VimL", 62: "Stata", 75: "Cirru", 85: "Liquid", 162: "Common Lisp", 175: "MTML", 43: "Frege", 23: "DM", 31: "Protocol Buffer", 91: "YAML", 138: "Alloy", 155: "Lua", 182: "Groovy", 195: "Ruby", 5: "Smalltalk", 46: "Parrot Assembly", 125: "Awk", 131: "Erlang", 141: "Ragel in Ruby Host", 189: "TXL", 40: "Scala", 41: "Standard ML", 53: "LFE", 76: "Ioke", 122: "PowerShell", 133: "Hy", 167: "XML", 183: "MoonScript", 0: "Kit", 54: "Latte", 86: "Opa", 149: "Processing", 179: "edn", 17: "Nu", 114: "Ceylon", 123: "Propeller Spin", 136: "Racket", 146: "JavaScript", 158: "XQuery", 163: "JSON5", 187: "Groovy Server Pages", 103: "Grammatical Framework", 50: "Dogescript", 59: "Matlab", 166: "R", 171: "E", 16: "Mask", 7: "Haskell", 73: "XProc", 94: "Xtend", 113: "Bluespec", 139: "Arduino", 145: "ABAP", 174: "KRL", 3: "Mathematica", 188: "LiveScript", 190: "Turing", 180: "AppleScript", 25: "Dart", 35: "AutoHotkey", 56: "Scaml", 58: "AsciiDoc", 60: "Mercury", 67: "OCaml", 84: "Julia", 15: "JSONLD", 129: "Swift", 92: "Inform 7", 68: "Sass", 109: "TeX", 110: "Verilog", 111: "Slash", 120: "Literate Agda", 124: "SQL", 159: "Tcl", 52: "JSON", 185: "XSLT", 165: "Nimrod", 61: "Scheme", 78: "VCL", 87: "Max", 90: "Xojo", 105: "Objective-C", 132: "GAS", 156: "Makefile", 1: "Less", 173: "IDL", 83: "Haml", 95: "Logtalk", 112: "BlitzMax", 143: "VHDL", 153: "Coq", 71: "Python", 57: "fish", 157: "PureScript", 38: "PHP"}
var b64_encoded_serialized_classifier string = ``
